{"id":"../webpack/node_modules/memory-fs/lib/join.js","dependencies":[{"name":"/Users/andre.bonfatti/Projects/node-modules-boilerplate/sample/package.json","includedInParent":true,"mtime":1540493250884},{"name":"/Users/andre.bonfatti/Projects/node-modules-boilerplate/sample/.babelrc","includedInParent":true,"mtime":1540492007791},{"name":"/Users/andre.bonfatti/Projects/node-modules-boilerplate/webpack/node_modules/memory-fs/package.json","includedInParent":true,"mtime":1540490250303},{"name":"./normalize","loc":{"line":1,"column":24},"parent":"/Users/andre.bonfatti/Projects/node-modules-boilerplate/webpack/node_modules/memory-fs/lib/join.js","resolved":"/Users/andre.bonfatti/Projects/node-modules-boilerplate/webpack/node_modules/memory-fs/lib/normalize.js"}],"generated":{"js":"var normalize = require(\"./normalize\");\r\n\r\nvar absoluteWinRegExp = /^[A-Z]:([\\\\\\/]|$)/i;\r\nvar absoluteNixRegExp = /^\\//i;\r\n\r\nmodule.exports = function join(path, request) {\r\n\tif(!request) return normalize(path);\r\n\tif(absoluteWinRegExp.test(request)) return normalize(request.replace(/\\//g, \"\\\\\"));\r\n\tif(absoluteNixRegExp.test(request)) return normalize(request);\r\n\tif(path == \"/\") return normalize(path + request);\r\n\tif(absoluteWinRegExp.test(path)) return normalize(path.replace(/\\//g, \"\\\\\") + \"\\\\\" + request.replace(/\\//g, \"\\\\\"));\r\n\tif(absoluteNixRegExp.test(path)) return normalize(path + \"/\" + request);\r\n\treturn normalize(path + \"/\" + request);\r\n};\r\n","map":{"mappings":[{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../webpack/node_modules/memory-fs/lib/join.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}}],"sources":{"../webpack/node_modules/memory-fs/lib/join.js":"var normalize = require(\"./normalize\");\r\n\r\nvar absoluteWinRegExp = /^[A-Z]:([\\\\\\/]|$)/i;\r\nvar absoluteNixRegExp = /^\\//i;\r\n\r\nmodule.exports = function join(path, request) {\r\n\tif(!request) return normalize(path);\r\n\tif(absoluteWinRegExp.test(request)) return normalize(request.replace(/\\//g, \"\\\\\"));\r\n\tif(absoluteNixRegExp.test(request)) return normalize(request);\r\n\tif(path == \"/\") return normalize(path + request);\r\n\tif(absoluteWinRegExp.test(path)) return normalize(path.replace(/\\//g, \"\\\\\") + \"\\\\\" + request.replace(/\\//g, \"\\\\\"));\r\n\tif(absoluteNixRegExp.test(path)) return normalize(path + \"/\" + request);\r\n\treturn normalize(path + \"/\" + request);\r\n};\r\n"},"lineCount":15}},"hash":"835c65d1eacf2102b8bd45f114abb97e","cacheData":{"env":{}}}